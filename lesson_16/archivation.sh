#!/bin/bash
# set -eu -- обычно я добавляю эту строку в начало скрипта, но
# в этом скрипте мы получаем ошибку при создании кронджоба, а 
# затем перенаправляю её в /dev/null, то есть игнорирую
# но из-за опции set -e скрипт обрывался на этом моменте
# не создавая кронджоб

MODE=$1

PATH_FOLDER=$2

case $MODE in
    "minutely"  )
        cron_schedule="* * * * *"
        archive_name=$(date +%Y-%m-%d-%T.%7N)
        ;;
    "hourly"    )
        cron_schedule="1 * * * *"
        archive_name=$(date +%Y-%m-%d-%H)
        ;;
    "daily"     )
        cron_schedule="0 20 * * *"
        archive_name=$(date +%Y-%m-%d)
        ;;
    *           )
        echo "Wrong input"
        exit 1
        ;;
esac

sudo apt install tree zip sshpass -y &> /dev/null
# добавил в установку sshpass -- утилиту, позволяющую автоматизировать
# ввод пароля при подключении по ssh


if [ -t 1 ]; then
    launcher="manually"
else
    launcher="cron"
fi
# тут выполняется проверка на то, запускается скрипт вручную или из крона

{
    whoami
    date
    echo "Mode: $MODE"
    echo "Launcher: $launcher"
    tree -a $PATH_FOLDER
} > $PATH_FOLDER/meta.txt

zip -r ~/"$archive_name".zip $PATH_FOLDER

path_to_script=$(readlink -f $0)    # эта переменная -- абсолютный путь к скрипту. Что бы 
                                    # мы могли запускать скрипт из любого места, а не только
                                    # из домашней директории (просто $0 выводит путь с точкой)


(crontab -l 2>/dev/null; echo "$cron_schedule $path_to_script $1 $2") | sort -u | crontab -
# sort -u работает, как sort | uniq, то есть отбрасывает все неуникальные значения. 
# нужен, что бы не записывать одинковые кронджобы и что бы кронджоб не создавал идентичную
# своей запись

# --------------------------------
# КОПИРОВАНИЕ НА УДАЛЁННЫЙ СЕРВЕР
# --------------------------------
# я использовал scp, потому что его не надо настривать перед использованием, как rsync
# третьим параметром скрипта, ему будет передаваться адрес сервера
# в формате "имя_пользователя@адрес:путь_к_папке" -- в эту папку будет копироваться
# наш архив

if [ $# -eq 3 ]; then   # копирование будет происходить, только если передано 3 или 4 параметра
    scp ~/"$archive_name".zip "$3/"
elif [ $# -eq 4 ]; then  # четвёртым переданным параметром может быть пароль от удалённого сервера
    sshpass -p $4 scp ~/"$archive_name".zip "$3/"   # теперь не будт спрашивать пароль при 
                                                    # подключении. но будет спрашивать добавить ли
                                                    # ключи в known_hosts при первом подключении...
fi


